1. Introduction
Project Overview: Explain that the application is designed to manage electricity billing for customers. It reads consumption data, calculates usage, generates bills, and saves them to a database.

2. Key Components
DataReader: Reads consumption and customer data from files.
MonthlyUsageCalculator: Calculates monthly electricity usage for each customer.
MonthlyBillGenerator: Generates monthly bills and saves them to a database.
PdfBillGenerator: Generates PDF versions of the bills.
RecordValidator: Validates records and separates valid and invalid records.


DataReader
Purpose: Reads data from files.
Methods:
readConsumptionData(String filePath): Reads consumption data and returns a list of strings.
readCustomerLookup(String filePath): Reads customer lookup data and returns a map of customer IDs to names.

MonthlyUsageCalculator
Purpose: Calculates monthly electricity usage.
Method:
calculateMonthlyUsage(List<String> records): Processes records to compute daytime and nighttime usage.

MonthlyBillGenerator
Purpose: Generates monthly bills and saves them to a database.
Methods:
loadCustomerNames(): Loads customer names from a file.
generateBill(String customerId, String customerName, CustomerUsage usage): Generates a bill and saves it to a database.

PdfBillGenerator
Purpose: Generates PDF bills.
Method:
generatePdfBill(String customerId, String customerName, CustomerUsage usage, String year): Creates a PDF bill for a customer.

RecordValidator
Purpose: Validates records and separates valid and invalid records.
Method:
validateRecords(String filePath): Validates records and writes invalid records to a separate file.


From here :

Presentation Outline for the Invoice Application
1. Introduction
Project Overview: Explain that the application is designed to manage electricity billing for customers. It reads consumption data, calculates usage, generates bills, and saves them to a database.
2. Key Components
DataReader: Reads consumption and customer data from files.
MonthlyUsageCalculator: Calculates monthly electricity usage for each customer.
MonthlyBillGenerator: Generates monthly bills and saves them to a database.
PdfBillGenerator: Generates PDF versions of the bills.
RecordValidator: Validates records and separates valid and invalid records.
3. Detailed Explanation of Each Component
DataReader
Purpose: Reads data from files.
Methods:
readConsumptionData(String filePath): Reads consumption data and returns a list of strings.
readCustomerLookup(String filePath): Reads customer lookup data and returns a map of customer IDs to names.

MonthlyUsageCalculator
Purpose: Calculates monthly electricity usage.
Method:
calculateMonthlyUsage(List<String> records): Processes records to compute daytime and nighttime usage.

MonthlyBillGenerator
Purpose: Generates monthly bills and saves them to a database.
Methods:
loadCustomerNames(): Loads customer names from a file.
generateBill(String customerId, String customerName, CustomerUsage usage): Generates a bill and saves it to a database.

PdfBillGenerator
Purpose: Generates PDF bills.
Method:
generatePdfBill(String customerId, String customerName, CustomerUsage usage, String year): Creates a PDF bill for a customer.

RecordValidator
Purpose: Validates records and separates valid and invalid records.
Method:
validateRecords(String filePath): Validates records and writes invalid records to a separate file.
----
* <p>
 * Workflow:
 * 1. Initialize required directories and load file paths from configuration.
 * 2. Read consumption data and customer lookup data from the specified files.
 * 3. Validate the consumption records and filter out invalid entries.
 * 4. Calculate the monthly usage for each customer based on the validated records.
 * 5. Generate bills for each customer using their usage data and lookup information.

* </p>**
 * The `DataReader` class is responsible for reading data files related to consumption
 * and customer information. It handles loading consumption data into a list and
 * customer lookup data into a map, and provides error handling and logging for file reading operations.
 * *
 * Responsibilities:
 * - Read consumption data from a specified file path and return it as a list of strings.
 * - Read customer lookup data from a specified file path and return it as a map with customer IDs and names.
 * - Handle IOExceptions and log relevant messages during file reading operations.
 *//**
 * The `CustomerUsage` class represents a customer's electricity usage,
 * specifically divided into daytime and nighttime usage.
 * It provides methods to manage (add to) usage data and retrieve the current values.
 * *
 * Responsibilities:
 * - Track electricity usage for daytime and nighttime separately.
 * - Allow updates to usage values.
 * - Provide access to current usage information.
 */
